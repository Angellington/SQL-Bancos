CREATE TABLE UNIDADES (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    unidade VARCHAR(50) NOT NULL
);

CREATE TABLE CARGOS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    cargo VARCHAR(20)
);

CREATE TABLE BIOMETRIA (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    biometria VARCHAR(50)
);

CREATE TABLE REQUISITANTE (
    CPF VARCHAR(11) UNIQUE NOT NULL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    sobrenome VARCHAR(50) NOT NULL,
    email_pessoal VARCHAR(150),
    email_funcional VARCHAR(150) NOT NULL,
    matricula VARCHAR(6) UNIQUE NOT NULL,
    numero VARCHAR(12) UNIQUE,
    lotacao VARCHAR(20) NOT NULL
);



CREATE TABLE PESSOAS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    requisitante_CPF VARCHAR(11),
    unidadeID BIGINT,
    cargoID BIGINT,
    biometriaID BIGINT,
    CONSTRAINT fk_REQUISITANTE FOREIGN KEY (requisitante_CPF) REFERENCES REQUISITANTE(CPF),
    CONSTRAINT fk_UNIDADES FOREIGN KEY (unidadeID) REFERENCES UNIDADES(id),
    CONSTRAINT fk_CARGOS FOREIGN KEY (cargoID) REFERENCES CARGOS(id),
    CONSTRAINT fk_BIOMETRIA FOREIGN KEY (biometriaID) REFERENCES BIOMETRIA(id)
);



CREATE TABLE TIPO_ARQUIVOS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    arquivo TEXT NOT NULL
);

CREATE TABLE SISTEMAS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    sistema VARCHAR(50)
);

CREATE TABLE SERVICOS (
    id BIGSERIAL NOT NULL PRIMARY KEY, 
    servico VARCHAR(50)
);





CREATE TABLE SISTEMAS_SERVICOS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    arquivoID BIGINT,
    sistemaID BIGINT,
    servicoID BIGINT,
    CONSTRAINT fk_TIPO_ARQUIVOS FOREIGN KEY (arquivoID) REFERENCES TIPO_ARQUIVOS(id),
    CONSTRAINT fk_SISTEMAS FOREIGN KEY (sistemaID) REFERENCES SISTEMAS(id),
    CONSTRAINT fk_SERVICOS FOREIGN KEY (servicoID) REFERENCES SERVICOS(id)
);


CREATE TABLE ANEXOS (
    id BIGSERIAL PRIMARY KEY,
    anexo TEXT
);






CREATE TABLE RESPOSTAS (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    pessoaID BIGINT,
    ssID BIGINT,
    anexoID BIGINT,
    CONSTRAINT fk_PESSOAS FOREIGN KEY (pessoaID) REFERENCES PESSOAS(id),
    CONSTRAINT fk_SISTEMAS_SERVICOS FOREIGN KEY (ssID) REFERENCES SISTEMAS_SERVICOS(id),
    CONSTRAINT fk_ANEXOS FOREIGN KEY (anexoID) REFERENCES ANEXOS(id)
);